/*
 * This file is generated by jOOQ.
 */
package example.app.domain.social.infrastructure.data.schema.tables.daos;


import example.app.domain.social.infrastructure.data.schema.tables.PosterFavorite;
import example.app.domain.social.infrastructure.data.schema.tables.records.PosterFavoriteRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PosterFavoriteDao extends DAOImpl<PosterFavoriteRecord, example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFavorite, Record2<Long, Long>> {

    /**
     * Create a new PosterFavoriteDao without any configuration
     */
    public PosterFavoriteDao() {
        super(PosterFavorite.POSTER_FAVORITE, example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFavorite.class);
    }

    /**
     * Create a new PosterFavoriteDao with an attached configuration
     */
    public PosterFavoriteDao(Configuration configuration) {
        super(PosterFavorite.POSTER_FAVORITE, example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFavorite.class, configuration);
    }

    @Override
    public Record2<Long, Long> getId(example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFavorite object) {
        return compositeKeyRecord(object.getPosterId(), object.getArticleId());
    }

    /**
     * Fetch records that have <code>poster_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFavorite> fetchRangeOfPosterId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PosterFavorite.POSTER_FAVORITE.POSTER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>poster_id IN (values)</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFavorite> fetchByPosterId(Long... values) {
        return fetch(PosterFavorite.POSTER_FAVORITE.POSTER_ID, values);
    }

    /**
     * Fetch records that have <code>article_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFavorite> fetchRangeOfArticleId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PosterFavorite.POSTER_FAVORITE.ARTICLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>article_id IN (values)</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFavorite> fetchByArticleId(Long... values) {
        return fetch(PosterFavorite.POSTER_FAVORITE.ARTICLE_ID, values);
    }

    /**
     * Fetch records that have <code>favorited_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFavorite> fetchRangeOfFavoritedAt(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PosterFavorite.POSTER_FAVORITE.FAVORITED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>favorited_at IN (values)</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFavorite> fetchByFavoritedAt(Long... values) {
        return fetch(PosterFavorite.POSTER_FAVORITE.FAVORITED_AT, values);
    }
}
