/*
 * This file is generated by jOOQ.
 */
package example.app.domain.social.infrastructure.data.schema.tables.daos;


import example.app.domain.social.infrastructure.data.schema.tables.ArticleFavorite;
import example.app.domain.social.infrastructure.data.schema.tables.records.ArticleFavoriteRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleFavoriteDao extends DAOImpl<ArticleFavoriteRecord, example.app.domain.social.infrastructure.data.schema.tables.pojos.ArticleFavorite, Record2<Long, Long>> {

    /**
     * Create a new ArticleFavoriteDao without any configuration
     */
    public ArticleFavoriteDao() {
        super(ArticleFavorite.ARTICLE_FAVORITE, example.app.domain.social.infrastructure.data.schema.tables.pojos.ArticleFavorite.class);
    }

    /**
     * Create a new ArticleFavoriteDao with an attached configuration
     */
    public ArticleFavoriteDao(Configuration configuration) {
        super(ArticleFavorite.ARTICLE_FAVORITE, example.app.domain.social.infrastructure.data.schema.tables.pojos.ArticleFavorite.class, configuration);
    }

    @Override
    public Record2<Long, Long> getId(example.app.domain.social.infrastructure.data.schema.tables.pojos.ArticleFavorite object) {
        return compositeKeyRecord(object.getArticleId(), object.getFavoritedBy());
    }

    /**
     * Fetch records that have <code>article_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.ArticleFavorite> fetchRangeOfArticleId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ArticleFavorite.ARTICLE_FAVORITE.ARTICLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>article_id IN (values)</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.ArticleFavorite> fetchByArticleId(Long... values) {
        return fetch(ArticleFavorite.ARTICLE_FAVORITE.ARTICLE_ID, values);
    }

    /**
     * Fetch records that have <code>favorited_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.ArticleFavorite> fetchRangeOfFavoritedBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ArticleFavorite.ARTICLE_FAVORITE.FAVORITED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>favorited_by IN (values)</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.ArticleFavorite> fetchByFavoritedBy(Long... values) {
        return fetch(ArticleFavorite.ARTICLE_FAVORITE.FAVORITED_BY, values);
    }

    /**
     * Fetch records that have <code>favorited_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.ArticleFavorite> fetchRangeOfFavoritedAt(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ArticleFavorite.ARTICLE_FAVORITE.FAVORITED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>favorited_at IN (values)</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.ArticleFavorite> fetchByFavoritedAt(Long... values) {
        return fetch(ArticleFavorite.ARTICLE_FAVORITE.FAVORITED_AT, values);
    }
}
