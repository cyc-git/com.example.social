/*
 * This file is generated by jOOQ.
 */
package example.app.domain.social.infrastructure.data.schema.tables.daos;


import example.app.domain.social.infrastructure.data.schema.tables.PosterFollow;
import example.app.domain.social.infrastructure.data.schema.tables.records.PosterFollowRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PosterFollowDao extends DAOImpl<PosterFollowRecord, example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFollow, Record2<Long, Long>> {

    /**
     * Create a new PosterFollowDao without any configuration
     */
    public PosterFollowDao() {
        super(PosterFollow.POSTER_FOLLOW, example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFollow.class);
    }

    /**
     * Create a new PosterFollowDao with an attached configuration
     */
    public PosterFollowDao(Configuration configuration) {
        super(PosterFollow.POSTER_FOLLOW, example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFollow.class, configuration);
    }

    @Override
    public Record2<Long, Long> getId(example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFollow object) {
        return compositeKeyRecord(object.getPosterId(), object.getFollowedBy());
    }

    /**
     * Fetch records that have <code>poster_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFollow> fetchRangeOfPosterId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PosterFollow.POSTER_FOLLOW.POSTER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>poster_id IN (values)</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFollow> fetchByPosterId(Long... values) {
        return fetch(PosterFollow.POSTER_FOLLOW.POSTER_ID, values);
    }

    /**
     * Fetch records that have <code>followed_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFollow> fetchRangeOfFollowedBy(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PosterFollow.POSTER_FOLLOW.FOLLOWED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>followed_by IN (values)</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFollow> fetchByFollowedBy(Long... values) {
        return fetch(PosterFollow.POSTER_FOLLOW.FOLLOWED_BY, values);
    }

    /**
     * Fetch records that have <code>followed_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFollow> fetchRangeOfFollowedAt(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PosterFollow.POSTER_FOLLOW.FOLLOWED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>followed_at IN (values)</code>
     */
    public List<example.app.domain.social.infrastructure.data.schema.tables.pojos.PosterFollow> fetchByFollowedAt(Long... values) {
        return fetch(PosterFollow.POSTER_FOLLOW.FOLLOWED_AT, values);
    }
}
