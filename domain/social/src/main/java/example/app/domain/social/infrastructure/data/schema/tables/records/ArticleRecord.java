/*
 * This file is generated by jOOQ.
 */
package example.app.domain.social.infrastructure.data.schema.tables.records;


import example.app.domain.social.infrastructure.data.schema.tables.Article;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleRecord extends UpdatableRecordImpl<ArticleRecord> implements Record6<Long, Long, String, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>test.article.id</code>. id
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.article.id</code>. id
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>test.article.poster_id</code>. the poster id who posted this article
     */
    public void setPosterId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.article.poster_id</code>. the poster id who posted this article
     */
    public Long getPosterId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>test.article.content</code>. the posted content
     */
    public void setContent(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.article.content</code>. the posted content
     */
    public String getContent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.article.posted_at</code>. the posted time
     */
    public void setPostedAt(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.article.posted_at</code>. the posted time
     */
    public Long getPostedAt() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>test.article.updated_at</code>. the last update time
     */
    public void setUpdatedAt(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.article.updated_at</code>. the last update time
     */
    public Long getUpdatedAt() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>test.article.sharing_article_id</code>. the article id shared by this article, may be null, means this article did not share any article
     */
    public void setSharingArticleId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>test.article.sharing_article_id</code>. the article id shared by this article, may be null, means this article did not share any article
     */
    public Long getSharingArticleId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, String, Long, Long, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, String, Long, Long, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Article.ARTICLE.ID;
    }

    @Override
    public Field<Long> field2() {
        return Article.ARTICLE.POSTER_ID;
    }

    @Override
    public Field<String> field3() {
        return Article.ARTICLE.CONTENT;
    }

    @Override
    public Field<Long> field4() {
        return Article.ARTICLE.POSTED_AT;
    }

    @Override
    public Field<Long> field5() {
        return Article.ARTICLE.UPDATED_AT;
    }

    @Override
    public Field<Long> field6() {
        return Article.ARTICLE.SHARING_ARTICLE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getPosterId();
    }

    @Override
    public String component3() {
        return getContent();
    }

    @Override
    public Long component4() {
        return getPostedAt();
    }

    @Override
    public Long component5() {
        return getUpdatedAt();
    }

    @Override
    public Long component6() {
        return getSharingArticleId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getPosterId();
    }

    @Override
    public String value3() {
        return getContent();
    }

    @Override
    public Long value4() {
        return getPostedAt();
    }

    @Override
    public Long value5() {
        return getUpdatedAt();
    }

    @Override
    public Long value6() {
        return getSharingArticleId();
    }

    @Override
    public ArticleRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ArticleRecord value2(Long value) {
        setPosterId(value);
        return this;
    }

    @Override
    public ArticleRecord value3(String value) {
        setContent(value);
        return this;
    }

    @Override
    public ArticleRecord value4(Long value) {
        setPostedAt(value);
        return this;
    }

    @Override
    public ArticleRecord value5(Long value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ArticleRecord value6(Long value) {
        setSharingArticleId(value);
        return this;
    }

    @Override
    public ArticleRecord values(Long value1, Long value2, String value3, Long value4, Long value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArticleRecord
     */
    public ArticleRecord() {
        super(Article.ARTICLE);
    }

    /**
     * Create a detached, initialised ArticleRecord
     */
    public ArticleRecord(Long id, Long posterId, String content, Long postedAt, Long updatedAt, Long sharingArticleId) {
        super(Article.ARTICLE);

        setId(id);
        setPosterId(posterId);
        setContent(content);
        setPostedAt(postedAt);
        setUpdatedAt(updatedAt);
        setSharingArticleId(sharingArticleId);
    }
}
